CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(HPCS)

set(HPCS_MAJOR_VERSION 1)
set(HPCS_MINOR_VERSION 0)
set(HPCS_VERSION
  ${HPCS_MAJOR_VERSION}.${HPCS_MINOR_VERSION} )

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

#Require Boost for this project
FIND_PACKAGE(Boost)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})

# Require MPI for this project:
FIND_PACKAGE(MPI REQUIRED)
SET( CMAKE_CXX_COMPILE_FLAGS ${CMAKE_CXX_COMPILE_FLAGS} ${MPI_COMPILE_FLAGS})
SET( CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS} ${MPI_LINK_FLAGS})
SET( CMAKE_BUILD_TYPE ${CMAKE_CXX_FLAGS_DEBUG})
INCLUDE_DIRECTORIES(${MPI_INCLUDE_PATH})

#Require Doxygen for documentation
FIND_PACKAGE(Doxygen)
IF (DOXYGEN_FOUND)
SET(DOXYGEN_INPUT ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in )
SET(DOXYGEN_OUTPUT ${CMAKE_BINARY_DIR}/doc)
ADD_CUSTOM_COMMAND(OUTPUT ${DOXYGEN_OUTPUT}
   COMMAND ${CMAKE_COMMAND} -E echo ${CMAKE_BINARY_DIR}
   COMMAND ${CMAKE_COMMAND} -E echo_append "Building API Documentation..."
   COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_INPUT}
   COMMAND ${CMAKE_COMMAND} -E echo "Done."
   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
   DEPENDS ${DOXYGEN_INPUT}
  )

ADD_CUSTOM_TARGET(doc DEPENDS ${DOXYGEN_OUTPUT})
ENDIF (DOXYGEN_FOUND)

#Require Eigen3 library
FIND_PACKAGE(Eigen3)
IF (EIGEN3_FOUND)
INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR})
ENDIF (EIGEN3_FOUND)

# Adding test and source subdirectory
ADD_SUBDIRECTORY(source)
ADD_SUBDIRECTORY(test)
